{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/result/result.component.ts","webpack:///src/app/result/result.component.html","webpack:///src/app/submit.service.ts","webpack:///src/app/survey/survey.component.ts","webpack:///src/app/survey/survey.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","declarations","routingComponents","AppComponent","title","selector","templateUrl","styleUrls","AppModule","providers","bootstrap","ResultComponent","http","get","subscribe","data","Object","values","forEach","value","checkbox","tokenized","split","element","concat","console","log","result","httpget","SubmitService","_http","url","post","providedIn","SurveyComponent","submitservice","form","radio","dropdown","students","location","campus","atmosphere","dormrooms","sports","interested","refer","formData","FormData","append","FirstName","LastName","StreetAddress","City","State","Zip","Tel","Email","Date","toString","response","error","alert","onClickSubmit","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMC,MAAM,GAAW,CAEnB;AACIC,UAAI,EAAE,QADV;AAEIC,eAAS,EAAE;AAFf,KAFmB,EAMnB;AACID,UAAI,EAAE,QADV;AAEIC,eAAS,EAAE;AAFf,KANmB,CAAvB;;QAqBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBARhB,CACL,6DAAaC,OAAb,CAAqBJ,MAArB,CADK,CAQgB,EAJrB,4DAIqB;;;;0HAAhBG,gB,EAAgB;AAAA;AAAA,kBAJrB,4DAIqB;AAAA,O;AAJT,K;;;;;sEAIPA,gB,EAAgB;cAT5B,sDAS4B;eATnB;AACNE,iBAAO,EAAE,CACL,6DAAaD,OAAb,CAAqBJ,MAArB,CADK,CADH;AAINF,iBAAO,EAAE,CACL,4DADK,CAJH;AAONQ,sBAAY,EAAE;AAPR,S;AASmB,Q;;;AACtB,QAAMC,iBAAiB,GAAG,CAAC,wEAAD,EAAkB,wEAAlB,CAA1B;;;;;;;;;;;;;;;;AC3BP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,UAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,0H;AAAA;AAAA;ACPzB;;AACA;;AACA;;AAAI;;AAA8C;;AAClD;;AACI;;AAAG;;AAAuB;;AAAM;;AAAI;;AAAI;;AACxC;;AAAG;;AAAuB;;AAAO;;AAAI;;AACzC;;AACA;;AACA;;AACA;;;;;;;;;sEDFaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA8BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBATJ,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,4FAJO,EAKP,wEALO,EAMP,4EANO,EAOP,qEAPO,CASI;;;;0HAGFA,S,EAAS;AAAA,uBAhBlB,2DAgBkB,EAhBN,yEAgBM,EAhBN,wEAgBM,EAdlB,wEAckB;AAdH,kBAGf,uEAHe,EAIf,oEAJe,EAKf,0DALe,EAMf,4FANe,EAOf,wEAPe,EAQf,4EARe,EASf,qEATe;AAcG,O;AALF,K;;;;;sEAKPA,S,EAAS;cAlBrB,sDAkBqB;eAlBZ;AACRP,sBAAY,EAAE,CACZ,2DADY,EAEZ,qEAFY,EAGZ,wEAHY,CADN;AAMRD,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,4FAJO,EAKP,wEALO,EAMP,4EANO,EAOP,qEAPO,CAND;AAeRS,mBAAS,EAAE,EAfH;AAgBRC,mBAAS,EAAE,CAAC,2DAAD;AAhBH,S;AAkBY,Q;;;;;;;;;;;;;;;;;;AC9BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGA;;AACE;;AAAI;;AAAG;;AAAW;;AAAM;;AACtB;;AAAG;;AAAU;;AAAM;;AACnB;;AAAG;;AAAe;;AAAM;;AACxB;;AAAG;;AAAK;;AAAM;;AACd;;AAAG;;AAAM;;AAAM;;AACf;;AAAG;;AAAS;;AAAM;;AAClB;;AAAG;;AAAM;;AAAM;;AACf;;AAAG;;AAAM;;AAAM;;AACf;;AAAG;;AAAK;;AAAM;;AACd;;AAAG;;AAAM;;AAAM;;AACf;;AAAG;;AAAc;;AAAM;;AACvB;;AAAG;;AAAwB;;AAAM;;AAAe;;AACpD;;;;;;AAZ0B;;AAAA;;AACH;;AAAA;;AACK;;AAAA;;AACV;;AAAA;;AACC;;AAAA;;AACG;;AAAA;;AACH;;AAAA;;AACA;;AAAA;;AACD;;AAAA;;AACC;;AAAA;;AACQ;;AAAA;;AACU;;AAAA;;;;QDJxBC,e;AAGX,+BAAqBC,IAArB,EAAuC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AACnB;;;;mCAEM,CACP,C,CACD;;;;kCACO;AAAA;;AACL;AACA,eAAKA,IAAL,CAAUC,GAAV,CAAc,qFAAd,EAAqGC,SAArG,CAA+G,UAACC,IAAD,EAAU;AACvHC,kBAAM,CAACC,MAAP,CAAcF,IAAd,EAAoBG,OAApB,CAA4B,UAAAC,KAAK,EAAI;AACnC,kBAAGA,KAAK,CAAC,EAAD,CAAR,EAAa;AACX;AACA,oBAAIC,QAAQ,GAAG,EAAf;AACA,oBAAIC,SAAS,GAAGF,KAAK,CAAC,EAAD,CAAL,CAAUG,KAAV,CAAgB,IAAhB,CAAhB;AACAD,yBAAS,CAACH,OAAV,CAAkB,UAAAK,OAAO,EAAI;AAC3B;AACA,sBAAGA,OAAO,IAAI,GAAd,EACAH,QAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,YAAhB,CAAX;AACA,sBAAGD,OAAO,IAAI,GAAd,EACAH,QAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,YAAhB,CAAX;AACA,sBAAGD,OAAO,IAAI,GAAd,EACAH,QAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,UAAhB,CAAX;AACA,sBAAGD,OAAO,IAAI,GAAd,EACAH,QAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,cAAhB,CAAX;AACA,sBAAGD,OAAO,IAAI,GAAd,EACAH,QAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,cAAhB,CAAX;AACA,sBAAGD,OAAO,IAAI,GAAd,EACAH,QAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,UAAhB,CAAX;AACD,iBAdD;AAeAL,qBAAK,CAAC,EAAD,CAAL,GAAYC,QAAZ;AACD,eArBkC,CAsBnC;;;AACA,kBAAGD,KAAK,CAAC,EAAD,CAAL,IAAa,CAAhB,EACAA,KAAK,CAAC,EAAD,CAAL,GAAY,SAAZ;AACA,kBAAGA,KAAK,CAAC,EAAD,CAAL,IAAa,CAAhB,EACAA,KAAK,CAAC,EAAD,CAAL,GAAY,YAAZ;AACA,kBAAGA,KAAK,CAAC,EAAD,CAAL,IAAa,CAAhB,EACAA,KAAK,CAAC,EAAD,CAAL,GAAY,UAAZ;AACA,kBAAGA,KAAK,CAAC,EAAD,CAAL,IAAa,CAAhB,EACAA,KAAK,CAAC,EAAD,CAAL,GAAY,OAAZ,CA9BmC,CAgClC;;AACD,kBAAGA,KAAK,CAAC,EAAD,CAAL,IAAa,CAAhB,EACAA,KAAK,CAAC,EAAD,CAAL,GAAY,aAAZ;AACA,kBAAGA,KAAK,CAAC,EAAD,CAAL,IAAa,CAAhB,EACAA,KAAK,CAAC,EAAD,CAAL,GAAY,QAAZ;AACA,kBAAGA,KAAK,CAAC,EAAD,CAAL,IAAa,CAAhB,EACAA,KAAK,CAAC,EAAD,CAAL,GAAY,UAAZ;AACD,aAvCD;AAwCAM,mBAAO,CAACC,GAAR,CAAYX,IAAZ,EAzCuH,CA0CvH;;AACA,iBAAI,CAACY,MAAL,GAAcZ,IAAd;AACH,WA5CC;AA6CH;;;;;;;uBAxDYJ,e,EAAe,gI;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,qD;AAAA;AAAA;ACX5B;;AACA;;AAAQ;AAAA,mBAAW,IAAAiB,OAAA,EAAX;AAAoB,WAApB;;AAAsB;;AAAW;;AAEzC;;AAcA;;;;AAdK;;AAAA;;;;;;;;;sEDQQjB,e,EAAe;cAN3B,uDAM2B;eANjB;AACTN,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAMiB,Q;;;;;;;;;;;;;;;;;;;;;;AEX5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMasB,a;AAIX,6BAAoBC,KAApB,EAAuC;AAAA;;AAAnB,aAAAA,KAAA,GAAAA,KAAA;AAFpB,aAAAC,GAAA,GAAM,EAAN;AAE0C;;;;+BAEnChB,I,EAAI;AACT,iBAAO,KAAKe,KAAL,CAAWE,IAAX,CAAqB,KAAKD,GAA1B,EAA+BhB,IAA/B,CAAP;AACD;;;;;;;uBARUc,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVI,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;ACN1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,e;AAGX,+BAAoBC,aAApB,EAA0DvB,IAA1D,EAA4E;AAAA;;AAAxD,aAAAuB,aAAA,GAAAA,aAAA;AAAsC,aAAAvB,IAAA,GAAAA,IAAA;AAAqB;;;;mCAEvE,CACP;;;sCAEawB,I,EAAY;AACxB,cAAIhB,QAAQ,GAAG,EAAf,CADwB,CACL;;AACnB,cAAIiB,KAAK,GAAG,CAAZ,CAFwB,CAET;;AACf,cAAIC,QAAQ,GAAG,CAAf,CAHwB,CAGN;;AAClB,cAAGF,IAAI,CAACjB,KAAL,CAAWoB,QAAX,IAAuB,IAA1B,EAA+B;AAAE;AAC/BnB,oBAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,KAAhB,CAAX;AACD;;AACD,cAAGY,IAAI,CAACjB,KAAL,CAAWqB,QAAX,IAAuB,IAA1B,EAA+B;AAC7BpB,oBAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,KAAhB,CAAX;AACD;;AACD,cAAGY,IAAI,CAACjB,KAAL,CAAWsB,MAAX,IAAqB,IAAxB,EAA6B;AAC3BrB,oBAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,KAAhB,CAAX;AACD;;AACD,cAAGY,IAAI,CAACjB,KAAL,CAAWuB,UAAX,IAAyB,IAA5B,EAAiC;AAC/BtB,oBAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,KAAhB,CAAX;AACD;;AACD,cAAGY,IAAI,CAACjB,KAAL,CAAWwB,SAAX,IAAwB,IAA3B,EAAgC;AAC9BvB,oBAAQ,GAAIA,QAAQ,CAACI,MAAT,CAAgB,KAAhB,CAAZ;AACD;;AACD,cAAGY,IAAI,CAACjB,KAAL,CAAWyB,MAAX,IAAqB,IAAxB,EAA6B;AAC3BxB,oBAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgB,KAAhB,CAAX;AACD;;AAED,cAAGY,IAAI,CAACjB,KAAL,CAAW0B,UAAX,IAAyB,SAA5B,EAAsC;AAAE;AACtCR,iBAAK,GAAG,CAAR;AACD;;AACD,cAAGD,IAAI,CAACjB,KAAL,CAAW0B,UAAX,IAAyB,YAA5B,EAAyC;AACvCR,iBAAK,GAAG,CAAR;AACD;;AACD,cAAGD,IAAI,CAACjB,KAAL,CAAW0B,UAAX,IAAyB,UAA5B,EAAuC;AACrCR,iBAAK,GAAG,CAAR;AACD;;AACD,cAAGD,IAAI,CAACjB,KAAL,CAAW0B,UAAX,IAAyB,OAA5B,EAAoC;AAClCR,iBAAK,GAAG,CAAR;AACD;;AAED,cAAGD,IAAI,CAACjB,KAAL,CAAW2B,KAAX,IAAoB,SAAvB,EAAiC;AAAC;AAChCR,oBAAQ,GAAG,CAAX;AACD;;AACD,cAAGF,IAAI,CAACjB,KAAL,CAAW2B,KAAX,IAAoB,QAAvB,EAAgC;AAC9BR,oBAAQ,GAAG,CAAX;AACD;;AACD,cAAGF,IAAI,CAACjB,KAAL,CAAW2B,KAAX,IAAoB,SAAvB,EAAiC;AAC/BR,oBAAQ,GAAG,CAAX;AACD;;AACD,cAAIS,QAAQ,GAAQ,IAAIC,QAAJ,EAApB,CA7CwB,CA6CY;;AACpCD,kBAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6Bb,IAAI,CAACjB,KAAL,CAAW+B,SAAxC;AACAH,kBAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4Bb,IAAI,CAACjB,KAAL,CAAWgC,QAAvC;AACAJ,kBAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiCb,IAAI,CAACjB,KAAL,CAAWiC,aAA5C;AACAL,kBAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBb,IAAI,CAACjB,KAAL,CAAWkC,IAAnC;AACAN,kBAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBb,IAAI,CAACjB,KAAL,CAAWmC,KAApC;AACAP,kBAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBb,IAAI,CAACjB,KAAL,CAAWoC,GAAlC;AACAR,kBAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBb,IAAI,CAACjB,KAAL,CAAWqC,GAApC;AACAT,kBAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBb,IAAI,CAACjB,KAAL,CAAWsC,KAApC;AACAV,kBAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+Bb,IAAI,CAACjB,KAAL,CAAWuC,IAA1C;AACAX,kBAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B7B,QAA5B;AACA2B,kBAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBZ,KAAK,CAACsB,QAAN,EAAzB;AACAZ,kBAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BX,QAAQ,CAACqB,QAAT,EAA5B,EAzDwB,CA2DxB;;AACA,eAAK/C,IAAL,CAAUoB,IAAV,CAAoB,qFAApB,EAA0Ge,QAA1G,EAAoHjC,SAApH,CACE,UAAC8C,QAAD;AAAA,mBAAcnC,OAAO,CAACC,GAAR,CAAYkC,QAAZ,CAAd;AAAA,WADF,EAEE,UAACC,KAAD;AAAA,mBAAWpC,OAAO,CAACC,GAAR,CAAYmC,KAAZ,CAAX;AAAA,WAFF;AAIAC,eAAK,CAAC,iCAAD,CAAL;AAED;;;;;;;uBA1EU5B,e,EAAe,8H,EAAA,gI;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,0wE;AAAA;AAAA;;;ACX5B;;AACI;;AACJ;;AAA2C;AAAA;;AAAA;;AAAA,mBAAc,IAAA6B,aAAA,KAAd;AAAoC,WAApC;;AAEnC;;AACI;;AAAuB;;AAAM;;AAC7B;;AACJ;;AAEA;;AACI;;AAAsB;;AAAK;;AAC3B;;AACJ;;AAEA;;AACI;;AAA2B;;AAAQ;;AACnC;;AACJ;;AAEA;;AACI;;AAAkB;;AAAK;;AACvB;;AACJ;;AAEA;;AACI;;AAAmB;;AAAM;;AACzB;;AACJ;;AAEA;;AACI;;AAAiB;;AAAI;;AACrB;;AACJ;;AAEA;;AACI;;AAAiB;;AAAI;;AACrB;;AACJ;;AAEA;;AACI;;AAAmB;;AAAM;;AACzB;;AACJ;;AAEA;;AACI;;AAAkB;;AAAK;;AACvB;;AACJ;;AAEA;;AAAI;;AAAkD;;AACtD;;AAAsB;;AAAQ;;AAC9B;;AAEA;;AAAsB;;AAAQ;;AAC9B;;AAEA;;AAAoB;;AAAM;;AAC1B;;AAEA;;AAAwB;;AAAU;;AAClC;;AAEA;;AAAuB;;AAAU;;AACjC;;AAEA;;AAAoB;;AAAM;;AAC1B;;AAEA;;AAAI;;AAA0D;;AAC9D;;AAAqB;;AAAO;;AAC5B;;AAEA;;AAAwB;;AAAU;;AAClC;;AAEA;;AAAsB;;AAAQ;;AAC9B;;AAEA;;AAAmB;;AAAK;;AACxB;;AAEA;;AACI;;AAAmB;;AAA2C;;AAC9D;;AACE;;AAAwB;;AAAW;;AACnC;;AAAuB;;AAAM;;AAC7B;;AAAwB;;AAAQ;;AAClC;;AACJ;;AAEA;;AACI;;AAA0C;;AAAM;;AACpD;;AACA;;AACA;;AACJ;;AACJ;;AACI;;AACJ;;;;;;;;;sEDvFa7B,e,EAAe;cAN3B,uDAM2B;eANjB;AACT7B,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAMiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMyD,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI1C,OAAO,CAACoC,KAAR,CAAcM,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SurveyComponent } from './survey/survey.component'\r\nimport { ResultComponent } from './result/result.component'\r\n\r\nconst routes: Routes = [\r\n\r\n    {//the survey and result paths\r\n        path: 'survey',\r\n        component: SurveyComponent,\r\n    },\r\n    {\r\n        path: 'result',\r\n        component: ResultComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ],\r\n    declarations: []\r\n})\r\nexport class AppRoutingModule { }\r\nexport const routingComponents = [SurveyComponent, ResultComponent];","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n}\r\n","<body>\r\n<div style=\"text-align:center;border:1px solid red;\">\r\n<h1>Welcome to the Student Survey Form for SWE 645</h1>\r\n<nav>\r\n    <b><a routerLink=\"survey\">Survey</a></b>&nbsp;\r\n    <b><a routerLink=\"result\">Results</a></b>\r\n</nav>\r\n<router-outlet></router-outlet>\r\n</div>\r\n</body>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule }   from '@angular/forms';\r\n\r\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {HttpClientModule} from '@angular/common/http';\nimport { ResultComponent } from './result/result.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    routingComponents,\r\n    ResultComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatSliderModule,\r\n    MatCheckboxModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http'\nimport { ITS_JUST_ANGULAR } from '@angular/core/src/r3_symbols';\n\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\n\nexport class ResultComponent implements OnInit {\n\n  result:any\n  constructor( private http: HttpClient) {\n   }\n\n  ngOnInit(): void {\n  }\n  //this method is triggered when the get results button is pushed on the result html\n  httpget(){\n    //we get the surveys from our API\n    this.http.get(\"http://a81486151835411eaad1006ffc916681-163898015.us-east-2.elb.amazonaws.com:5000/\").subscribe((data) => {\n      Object.values(data).forEach(value => {\n        if(value[10]){\n          //for the checkbox entry we tokenize and parse the string\n          var checkbox = \"\";\n          var tokenized = value[10].split(\", \")\n          tokenized.forEach(element => {\n            //for each token we replace it with the corresponding value\n            if(element == \"0\")\n            checkbox = checkbox.concat(\"Students, \")\n            if(element == \"1\")\n            checkbox = checkbox.concat(\"Location, \")\n            if(element == \"2\")\n            checkbox = checkbox.concat(\"Campus, \")\n            if(element == \"3\")\n            checkbox = checkbox.concat(\"Atmoshpere, \")\n            if(element == \"4\")\n            checkbox = checkbox.concat(\"Dorm Rooms, \")\n            if(element == \"5\")\n            checkbox = checkbox.concat(\"Sports, \")\n          });\n          value[10] = checkbox\n        }\n        //we replace the radio variable based on the integer that's returned\n        if(value[11] == 0)\n        value[11] = \"Friends\"\n        if(value[11] == 1)\n        value[11] = \"Television\"\n        if(value[11] == 2)\n        value[11] = \"Internet\"\n        if(value[11] == 3)\n        value[11] = \"Other\"\n        \n         //we replace the dropdown variable based on the integer that's returned\n        if(value[12] == 0)\n        value[12] = \"Very Likely\"\n        if(value[12] == 1)\n        value[12] = \"Likely\"\n        if(value[12] == 2)\n        value[12] = \"Unlikely\"\n      });\n      console.log(data)\n      //we put all of the data into the result variable because that is the one the html is using\n      this.result = data\n  });\n}\n}","<body>\n<button (click) = \"httpget()\">Get Results</button>\n\n<div *ngFor = \"let entry of result\">\n  <h5><b>First name:</b>  {{ entry[1] }}, \n    <b>Last Name:</b>  {{ entry[2] }}, \n    <b>Street Address:</b>  {{ entry[3] }},\n    <b>City:</b>  {{ entry[4] }},\n    <b>State:</b>  {{ entry[5] }},\n    <b>Zip Code:</b>  {{ entry[6] }},\n    <b>Phone:</b>  {{ entry[7] }}, \n    <b>Email:</b>  {{ entry[8] }},\n    <b>Date:</b>  {{ entry[9] }}, \n    <b>Liked:</b>  {{ entry[10] }}, \n    <b>Interested by:</b>  {{ entry[11] }}, \n    <b>How Likely to Recommend:</b>  {{ entry[12] }}</h5>\n</div>\n</body>","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubmitService {\r\n\r\n  url = '';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  enroll(data){\r\n    return this._http.post<any>(this.url, data);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport {SubmitService} from '../submit.service';\r\nimport { HttpClient } from '@angular/common/http'\r\n\r\n@Component({\r\n  selector: 'app-survey',\r\n  templateUrl: './survey.component.html',\r\n  styleUrls: ['./survey.component.css']\r\n})\r\n\r\nexport class SurveyComponent implements OnInit {\r\n  stringdata: any;\r\n\r\n  constructor(private submitservice: SubmitService, private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onClickSubmit(form: NgForm){\r\n    var checkbox = \"\"; //our value for the checkbox elements\r\n    var radio = 0; //our value for the radio button elements\r\n    var dropdown = 0; //our value for the dropdown elements\r\n    if(form.value.students == true){ //we concat the checkbox string based on what was selected in the checkbox group\r\n      checkbox = checkbox.concat(\"0, \");\r\n    }\r\n    if(form.value.location == true){\r\n      checkbox = checkbox.concat(\"1, \");\r\n    }\r\n    if(form.value.campus == true){\r\n      checkbox = checkbox.concat(\"2, \");\r\n    }\r\n    if(form.value.atmosphere == true){\r\n      checkbox = checkbox.concat(\"3, \");\r\n    }\r\n    if(form.value.dormrooms == true){\r\n      checkbox =  checkbox.concat(\"4, \");\r\n    }\r\n    if(form.value.sports == true){\r\n      checkbox = checkbox.concat(\"5, \");\r\n    }\r\n\r\n    if(form.value.interested == \"friends\"){ //we change the value of the radio variable based on which radio button is selected\r\n      radio = 0;\r\n    }\r\n    if(form.value.interested == \"television\"){\r\n      radio = 1;\r\n    }\r\n    if(form.value.interested == \"internet\"){\r\n      radio = 2;\r\n    }\r\n    if(form.value.interested == \"other\"){\r\n      radio = 3;\r\n    }\r\n\r\n    if(form.value.refer == \"vlikely\"){//we change the value of the dropdown variable based on which dropdown option is selected\r\n      dropdown = 0;\r\n    }\r\n    if(form.value.refer == \"likely\"){\r\n      dropdown = 1;\r\n    }\r\n    if(form.value.refer == \"ulikely\"){\r\n      dropdown = 2;\r\n    }\r\n    var formData: any = new FormData(); //we use the data gathered from the form and the variables we created to create a form data\r\n    formData.append('firstname', form.value.FirstName);\r\n    formData.append('lastname', form.value.LastName);\r\n    formData.append('streetaddress', form.value.StreetAddress);\r\n    formData.append('city', form.value.City);\r\n    formData.append('state', form.value.State);\r\n    formData.append('zip', form.value.Zip);\r\n    formData.append('phone', form.value.Tel);\r\n    formData.append('email', form.value.Email);\r\n    formData.append('date_survey', form.value.Date)\r\n    formData.append('checkbox', checkbox);\r\n    formData.append('radio', radio.toString());\r\n    formData.append('dropdown', dropdown.toString());\r\n\r\n    //we post this form data to our API\r\n    this.http.post<any>(\"http://a81486151835411eaad1006ffc916681-163898015.us-east-2.elb.amazonaws.com:5000/\",formData).subscribe(\r\n      (response) => console.log(response),\r\n      (error) => console.log(error)\r\n    );\r\n    alert(\"Your Survey Has Been Submitted!\")\r\n\r\n  }\r\n\r\n}\r\n","<body>\r\n    <div style=\"text-align:center;border:1px solid red;\">\r\n<form #student = \"ngForm\" ngNativeValidate (ngSubmit) = \"onClickSubmit(student)\">\r\n        \r\n        <div>\r\n            <label for=\"FirstName\">First:</label>\r\n            <input name = \"FirstName\" ngModel required type=\"text\" placeholder=\"First Name\">\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"LastName\">Last:</label>\r\n            <input name = \"LastName\" type=\"text\" placeholder=\"Last Name\" required ngModel>\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"StreetAddress\">Address:</label>\r\n            <input name = \"StreetAddress\" type=\"text\" placeholder=\"Street Address\" required ngModel>\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"City\">City:</label>\r\n            <input name = \"City\" type=\"text\" placeholder=\"City\" required ngModel>\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"State\">State:</label>\r\n            <input name = \"State\" type=\"text\" placeholder=\"State\" required ngModel>\r\n        </div>\r\n        \r\n        <div>\r\n            <label for=\"Zip\">Zip:</label>\r\n            <input name = \"Zip\" type=\"number\" placeholder=\"Zip\" required ngModel>\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"Tel\">Tel:</label>\r\n            <input name = \"Tel\" type=\"number\" placeholder=\"Tel\" required ngModel>\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"Email\">Email:</label>\r\n            <input name = \"Email\" type=\"text\" placeholder=\"Email\" required ngModel>\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"Date\">Date:</label>\r\n            <input name = \"Date\" type=\"date\" placeholder=\"Date\" required ngModel>\r\n        </div>\r\n        \r\n        <h3>Please specify something you like about GMU Campus</h3>\r\n        <label for=\"students\">Students</label>\r\n        <input name = \"students\" type = \"checkbox\" ngModel value = \"campus\">\r\n        \r\n        <label for=\"location\">Location</label>\r\n        <input name = \"location\" type = \"checkbox\" ngModel value = \"location\">\r\n        \r\n        <label for=\"campus\">Campus</label>\r\n        <input name = \"campus\" type = \"checkbox\" ngModel value = \"campus\">\r\n        \r\n        <label for=\"atmosphere\">Atmosphere</label>\r\n        <input name = \"atmosphere\" type = \"checkbox\" ngModel value = \"atmosphere\">\r\n        \r\n        <label for=\"dormrooms\">Dorm Rooms</label>\r\n        <input name = \"dorms\" type = \"checkbox\" ngModel value=\"dormrooms\">\r\n        \r\n        <label for=\"sports\">Sports</label>\r\n        <input name = \"sports\" type = \"checkbox\" ngModel value=\"sports\">\r\n        \r\n        <h3>Please specify how you became interested in the University</h3>\r\n        <label for=\"friends\">Friends</label>\r\n        <input name = \"interested\" type = \"radio\" ngModel value = \"friends\">\r\n        \r\n        <label for=\"television\">Television</label>\r\n        <input name = \"interested\" type = \"radio\" ngModel value = \"television\">\r\n        \r\n        <label for=\"internet\">Internet</label>\r\n        <input name = \"interested\" type = \"radio\" ngModel value = \"internet\">\r\n        \r\n        <label for=\"other\">Other</label>\r\n        <input name = \"interested\" type = \"radio\" ngModel value = \"other\">\r\n        \r\n        <div>\r\n            <label for=\"refer\">How likely are you to refer a friend to GMU</label>\r\n            <select name=\"refer\" ngModel>\r\n              <option value=\"vlikely\">Very Likely</option>\r\n              <option value=\"likely\">Likely</option>\r\n              <option value=\"ulikely\">Unlikely</option>\r\n            </select>\r\n        </div>\r\n        \r\n        <div>\r\n            <button mat-raised-button color=\"primary\">Submit</button>\r\n        </div>\r\n        <div>\r\n        <input type=\"reset\" value=\"Reset\" />\r\n    </div>\r\n</form>\r\n    </div>\r\n</body>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}