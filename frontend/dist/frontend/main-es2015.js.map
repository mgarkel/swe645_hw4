{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/result/result.component.ts","./src/app/result/result.component.html","./src/app/submit.service.ts","./src/app/survey/survey.component.ts","./src/app/survey/survey.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SurveyComponent } from './survey/survey.component'\r\nimport { ResultComponent } from './result/result.component'\r\n\r\nconst routes: Routes = [\r\n\r\n    {//the survey and result paths\r\n        path: 'survey',\r\n        component: SurveyComponent,\r\n    },\r\n    {\r\n        path: 'result',\r\n        component: ResultComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ],\r\n    declarations: []\r\n})\r\nexport class AppRoutingModule { }\r\nexport const routingComponents = [SurveyComponent, ResultComponent];","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n}\r\n","<body>\r\n<div style=\"text-align:center;border:1px solid red;\">\r\n<h1>Welcome to the Student Survey Form for SWE 645</h1>\r\n<nav>\r\n    <b><a routerLink=\"survey\">Survey</a></b>&nbsp;\r\n    <b><a routerLink=\"result\">Results</a></b>\r\n</nav>\r\n<router-outlet></router-outlet>\r\n</div>\r\n</body>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule }   from '@angular/forms';\r\n\r\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {HttpClientModule} from '@angular/common/http';\nimport { ResultComponent } from './result/result.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    routingComponents,\r\n    ResultComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatSliderModule,\r\n    MatCheckboxModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http'\nimport { ITS_JUST_ANGULAR } from '@angular/core/src/r3_symbols';\n\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\n\nexport class ResultComponent implements OnInit {\n\n  result:any\n  constructor( private http: HttpClient) {\n   }\n\n  ngOnInit(): void {\n  }\n  //this method is triggered when the get results button is pushed on the result html\n  httpget(){\n    //we get the surveys from our API\n    this.http.get(\"http://a81486151835411eaad1006ffc916681-163898015.us-east-2.elb.amazonaws.com:5000/\").subscribe((data) => {\n      Object.values(data).forEach(value => {\n        if(value[10]){\n          //for the checkbox entry we tokenize and parse the string\n          var checkbox = \"\";\n          var tokenized = value[10].split(\", \")\n          tokenized.forEach(element => {\n            //for each token we replace it with the corresponding value\n            if(element == \"0\")\n            checkbox = checkbox.concat(\"Students, \")\n            if(element == \"1\")\n            checkbox = checkbox.concat(\"Location, \")\n            if(element == \"2\")\n            checkbox = checkbox.concat(\"Campus, \")\n            if(element == \"3\")\n            checkbox = checkbox.concat(\"Atmoshpere, \")\n            if(element == \"4\")\n            checkbox = checkbox.concat(\"Dorm Rooms, \")\n            if(element == \"5\")\n            checkbox = checkbox.concat(\"Sports, \")\n          });\n          value[10] = checkbox\n        }\n        //we replace the radio variable based on the integer that's returned\n        if(value[11] == 0)\n        value[11] = \"Friends\"\n        if(value[11] == 1)\n        value[11] = \"Television\"\n        if(value[11] == 2)\n        value[11] = \"Internet\"\n        if(value[11] == 3)\n        value[11] = \"Other\"\n        \n         //we replace the dropdown variable based on the integer that's returned\n        if(value[12] == 0)\n        value[12] = \"Very Likely\"\n        if(value[12] == 1)\n        value[12] = \"Likely\"\n        if(value[12] == 2)\n        value[12] = \"Unlikely\"\n      });\n      console.log(data)\n      //we put all of the data into the result variable because that is the one the html is using\n      this.result = data\n  });\n}\n}","<body>\n<button (click) = \"httpget()\">Get Results</button>\n\n<div *ngFor = \"let entry of result\">\n  <h5><b>First name:</b>  {{ entry[1] }}, \n    <b>Last Name:</b>  {{ entry[2] }}, \n    <b>Street Address:</b>  {{ entry[3] }},\n    <b>City:</b>  {{ entry[4] }},\n    <b>State:</b>  {{ entry[5] }},\n    <b>Zip Code:</b>  {{ entry[6] }},\n    <b>Phone:</b>  {{ entry[7] }}, \n    <b>Email:</b>  {{ entry[8] }},\n    <b>Date:</b>  {{ entry[9] }}, \n    <b>Liked:</b>  {{ entry[10] }}, \n    <b>Interested by:</b>  {{ entry[11] }}, \n    <b>How Likely to Recommend:</b>  {{ entry[12] }}</h5>\n</div>\n</body>","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubmitService {\r\n\r\n  url = '';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  enroll(data){\r\n    return this._http.post<any>(this.url, data);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport {SubmitService} from '../submit.service';\r\nimport { HttpClient } from '@angular/common/http'\r\n\r\n@Component({\r\n  selector: 'app-survey',\r\n  templateUrl: './survey.component.html',\r\n  styleUrls: ['./survey.component.css']\r\n})\r\n\r\nexport class SurveyComponent implements OnInit {\r\n  stringdata: any;\r\n\r\n  constructor(private submitservice: SubmitService, private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onClickSubmit(form: NgForm){\r\n    var checkbox = \"\"; //our value for the checkbox elements\r\n    var radio = 0; //our value for the radio button elements\r\n    var dropdown = 0; //our value for the dropdown elements\r\n    if(form.value.students == true){ //we concat the checkbox string based on what was selected in the checkbox group\r\n      checkbox = checkbox.concat(\"0, \");\r\n    }\r\n    if(form.value.location == true){\r\n      checkbox = checkbox.concat(\"1, \");\r\n    }\r\n    if(form.value.campus == true){\r\n      checkbox = checkbox.concat(\"2, \");\r\n    }\r\n    if(form.value.atmosphere == true){\r\n      checkbox = checkbox.concat(\"3, \");\r\n    }\r\n    if(form.value.dormrooms == true){\r\n      checkbox =  checkbox.concat(\"4, \");\r\n    }\r\n    if(form.value.sports == true){\r\n      checkbox = checkbox.concat(\"5, \");\r\n    }\r\n\r\n    if(form.value.interested == \"friends\"){ //we change the value of the radio variable based on which radio button is selected\r\n      radio = 0;\r\n    }\r\n    if(form.value.interested == \"television\"){\r\n      radio = 1;\r\n    }\r\n    if(form.value.interested == \"internet\"){\r\n      radio = 2;\r\n    }\r\n    if(form.value.interested == \"other\"){\r\n      radio = 3;\r\n    }\r\n\r\n    if(form.value.refer == \"vlikely\"){//we change the value of the dropdown variable based on which dropdown option is selected\r\n      dropdown = 0;\r\n    }\r\n    if(form.value.refer == \"likely\"){\r\n      dropdown = 1;\r\n    }\r\n    if(form.value.refer == \"ulikely\"){\r\n      dropdown = 2;\r\n    }\r\n    var formData: any = new FormData(); //we use the data gathered from the form and the variables we created to create a form data\r\n    formData.append('firstname', form.value.FirstName);\r\n    formData.append('lastname', form.value.LastName);\r\n    formData.append('streetaddress', form.value.StreetAddress);\r\n    formData.append('city', form.value.City);\r\n    formData.append('state', form.value.State);\r\n    formData.append('zip', form.value.Zip);\r\n    formData.append('phone', form.value.Tel);\r\n    formData.append('email', form.value.Email);\r\n    formData.append('date_survey', form.value.Date)\r\n    formData.append('checkbox', checkbox);\r\n    formData.append('radio', radio.toString());\r\n    formData.append('dropdown', dropdown.toString());\r\n\r\n    //we post this form data to our API\r\n    this.http.post<any>(\"http://a81486151835411eaad1006ffc916681-163898015.us-east-2.elb.amazonaws.com:5000/\",formData).subscribe(\r\n      (response) => console.log(response),\r\n      (error) => console.log(error)\r\n    );\r\n    alert(\"Your Survey Has Been Submitted!\")\r\n\r\n  }\r\n\r\n}\r\n","<body>\r\n    <div style=\"text-align:center;border:1px solid red;\">\r\n<form #student = \"ngForm\" ngNativeValidate (ngSubmit) = \"onClickSubmit(student)\">\r\n        \r\n        <div>\r\n            <label for=\"FirstName\">First:</label>\r\n            <input name = \"FirstName\" ngModel required type=\"text\" placeholder=\"First Name\">\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"LastName\">Last:</label>\r\n            <input name = \"LastName\" type=\"text\" placeholder=\"Last Name\" required ngModel>\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"StreetAddress\">Address:</label>\r\n            <input name = \"StreetAddress\" type=\"text\" placeholder=\"Street Address\" required ngModel>\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"City\">City:</label>\r\n            <input name = \"City\" type=\"text\" placeholder=\"City\" required ngModel>\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"State\">State:</label>\r\n            <input name = \"State\" type=\"text\" placeholder=\"State\" required ngModel>\r\n        </div>\r\n        \r\n        <div>\r\n            <label for=\"Zip\">Zip:</label>\r\n            <input name = \"Zip\" type=\"number\" placeholder=\"Zip\" required ngModel>\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"Tel\">Tel:</label>\r\n            <input name = \"Tel\" type=\"number\" placeholder=\"Tel\" required ngModel>\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"Email\">Email:</label>\r\n            <input name = \"Email\" type=\"text\" placeholder=\"Email\" required ngModel>\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"Date\">Date:</label>\r\n            <input name = \"Date\" type=\"date\" placeholder=\"Date\" required ngModel>\r\n        </div>\r\n        \r\n        <h3>Please specify something you like about GMU Campus</h3>\r\n        <label for=\"students\">Students</label>\r\n        <input name = \"students\" type = \"checkbox\" ngModel value = \"campus\">\r\n        \r\n        <label for=\"location\">Location</label>\r\n        <input name = \"location\" type = \"checkbox\" ngModel value = \"location\">\r\n        \r\n        <label for=\"campus\">Campus</label>\r\n        <input name = \"campus\" type = \"checkbox\" ngModel value = \"campus\">\r\n        \r\n        <label for=\"atmosphere\">Atmosphere</label>\r\n        <input name = \"atmosphere\" type = \"checkbox\" ngModel value = \"atmosphere\">\r\n        \r\n        <label for=\"dormrooms\">Dorm Rooms</label>\r\n        <input name = \"dorms\" type = \"checkbox\" ngModel value=\"dormrooms\">\r\n        \r\n        <label for=\"sports\">Sports</label>\r\n        <input name = \"sports\" type = \"checkbox\" ngModel value=\"sports\">\r\n        \r\n        <h3>Please specify how you became interested in the University</h3>\r\n        <label for=\"friends\">Friends</label>\r\n        <input name = \"interested\" type = \"radio\" ngModel value = \"friends\">\r\n        \r\n        <label for=\"television\">Television</label>\r\n        <input name = \"interested\" type = \"radio\" ngModel value = \"television\">\r\n        \r\n        <label for=\"internet\">Internet</label>\r\n        <input name = \"interested\" type = \"radio\" ngModel value = \"internet\">\r\n        \r\n        <label for=\"other\">Other</label>\r\n        <input name = \"interested\" type = \"radio\" ngModel value = \"other\">\r\n        \r\n        <div>\r\n            <label for=\"refer\">How likely are you to refer a friend to GMU</label>\r\n            <select name=\"refer\" ngModel>\r\n              <option value=\"vlikely\">Very Likely</option>\r\n              <option value=\"likely\">Likely</option>\r\n              <option value=\"ulikely\">Unlikely</option>\r\n            </select>\r\n        </div>\r\n        \r\n        <div>\r\n            <button mat-raised-button color=\"primary\">Submit</button>\r\n        </div>\r\n        <div>\r\n        <input type=\"reset\" value=\"Reset\" />\r\n    </div>\r\n</form>\r\n    </div>\r\n</body>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}